<UserControl x:Class="Gu.Wpf.NumericInput.Demo.DecimalBoxView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:Gu.Wpf.NumericInput.Demo"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:numeric="http://gu.se/NumericInput"
             xmlns:propertyGrid="http://gu.se/PropertyGrid"
             mc:Ignorable="d">
    <UserControl.DataContext>
        <local:DecimalBoxVm />
    </UserControl.DataContext>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition />
        </Grid.RowDefinitions>
        <numeric:DecimalBox x:Name="InputBox"
                            AllowSpinners="{Binding AllowSpinners}"
                            Culture="{Binding Culture}"
                            DecimalDigits="{Binding DecimalDigits}"
                            Increment="{Binding Increment}"
                            IsReadOnly="{Binding IsReadOnly}"
                            MaxValue="{Binding Max}"
                            MinValue="{Binding Min}"
                            RegexPattern="{Binding RegexPattern}"
                            ValidationTrigger="{Binding ValidationTrigger}"
                            Value="{Binding Value,
                                            ValidatesOnDataErrors=True}" />

        <ItemsControl Grid.Row="1" Style="{StaticResource {x:Static propertyGrid:Keys.PropertyGridStyleKey}}">
            <TextBlock Style="{StaticResource {x:Static propertyGrid:Keys.HeaderTextBlockStyleKey}}" Text="Status:" />

            <HeaderedContentControl Header="Text">
                <TextBlock Text="{Binding Text, ElementName=InputBox}" />
            </HeaderedContentControl>

            <HeaderedContentControl Header="Value">
                <TextBlock Text="{Binding Value, ElementName=InputBox}" />
            </HeaderedContentControl>

            <HeaderedContentControl Header="StringFormat">
                <TextBlock Text="{Binding StringFormat, ElementName=InputBox}" />
            </HeaderedContentControl>

            <HeaderedContentControl Header="IsFocused">
                <TextBlock Text="{Binding IsFocused, ElementName=InputBox}" />
            </HeaderedContentControl>

            <TextBlock Style="{StaticResource {x:Static propertyGrid:Keys.HeaderTextBlockStyleKey}}" Text="ViewModel:" />

            <HeaderedContentControl Header="CurrentValue">
                <TextBlock Text="{Binding Value}" />
            </HeaderedContentControl>

            <HeaderedContentControl Header="Edit Value">
                <TextBox Text="{Binding Value}" />
            </HeaderedContentControl>

            <TextBlock Style="{StaticResource {x:Static propertyGrid:Keys.HeaderTextBlockStyleKey}}" Text="Settings:" />

            <HeaderedContentControl Header="IsReadOnly">
                <CheckBox IsChecked="{Binding IsReadOnly}" />
            </HeaderedContentControl>

            <HeaderedContentControl Header="HasErrors">
                <CheckBox AutomationProperties.AutomationId="HasErrorsBox" IsChecked="{Binding HasErrors}" />
            </HeaderedContentControl>

            <HeaderedContentControl Header="ValidationTrigger">
                <ComboBox AutomationProperties.AutomationId="ValidationTriggerBox" SelectedItem="{Binding ValidationTrigger}">
                    <numeric:ValidationTrigger>PropertyChanged</numeric:ValidationTrigger>
                    <numeric:ValidationTrigger>LostFocus</numeric:ValidationTrigger>
                    <numeric:ValidationTrigger>Explicit</numeric:ValidationTrigger>
                </ComboBox>
            </HeaderedContentControl>

            <HeaderedContentControl Header="CanValueBeNull">
                <CheckBox AutomationProperties.AutomationId="CanBeNullBox" IsChecked="{Binding CanValueBeNull}" />
            </HeaderedContentControl>

            <HeaderedContentControl Header="Culture">
                <ComboBox IsSynchronizedWithCurrentItem="True"
                          ItemsSource="{Binding Cultures}"
                          SelectedItem="{Binding Culture}" />
            </HeaderedContentControl>

            <HeaderedContentControl Header="Decimals">
                <TextBox Text="{Binding DecimalDigits, TargetNullValue=''}" />
            </HeaderedContentControl>


            <HeaderedContentControl Header="AllowLeadingWhite">
                <CheckBox AutomationProperties.AutomationId="AllowLeadingWhiteBox" IsChecked="{Binding AllowLeadingWhite}" />
            </HeaderedContentControl>

            <HeaderedContentControl Header="AllowTrailingWhite">
                <CheckBox AutomationProperties.AutomationId="AllowTrailingWhiteBox" IsChecked="{Binding AllowTrailingWhite}" />
            </HeaderedContentControl>

            <HeaderedContentControl Header="AllowLeadingSign">
                <CheckBox AutomationProperties.AutomationId="AllowLeadingSignBox" IsChecked="{Binding AllowLeadingSign}" />
            </HeaderedContentControl>

            <HeaderedContentControl Header="AllowDecimalPoint">
                <CheckBox AutomationProperties.AutomationId="AllowDecimalPointBox" IsChecked="{Binding AllowDecimalPoint}" />
            </HeaderedContentControl>

            <HeaderedContentControl Header="AllowThousands">
                <CheckBox AutomationProperties.AutomationId="AllowThousandsBox" IsChecked="{Binding AllowThousands}" />
            </HeaderedContentControl>

            <HeaderedContentControl Header="AllowExponent">
                <CheckBox AutomationProperties.AutomationId="AllowExponentBox" IsChecked="{Binding AllowExponent}" />
            </HeaderedContentControl>

            <HeaderedContentControl Header="Max">
                <TextBox Text="{Binding Max, TargetNullValue=''}" />
            </HeaderedContentControl>

            <HeaderedContentControl Header="Min">
                <TextBox Text="{Binding Min, TargetNullValue=''}" />
            </HeaderedContentControl>

            <HeaderedContentControl Header="AllowSpinners">
                <CheckBox IsChecked="{Binding AllowSpinners}" />
            </HeaderedContentControl>

            <HeaderedContentControl Header="Increment">
                <TextBox Text="{Binding Increment, TargetNullValue=''}" />
            </HeaderedContentControl>

            <HeaderedContentControl Header="RegexPattern">
                <TextBox Text="{Binding RegexPattern}" />
            </HeaderedContentControl>
        </ItemsControl>
    </Grid>
</UserControl>
