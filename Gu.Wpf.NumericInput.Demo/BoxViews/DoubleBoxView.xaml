<UserControl x:Class="Gu.Wpf.NumericInput.Demo.DoubleBoxView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:Gu.Wpf.NumericInput.Demo"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:numeric="http://gu.se/NumericInput"
             xmlns:propertyGrid="http://gu.se/PropertyGrid"
             mc:Ignorable="d">
    <UserControl.DataContext>
        <local:DoubleBoxVm />
    </UserControl.DataContext>
    <UniformGrid Columns="2">
        <GroupBox VerticalAlignment="Top" Header="DoubleBox">
            <numeric:DoubleBox x:Name="InputBox"
                               AllowSpinners="{Binding AllowSpinners}"
                               AutomationProperties.AutomationId="{x:Static local:AutomationIds.InputBox}"
                               CanValueBeNull="{Binding CanValueBeNull}"
                               Culture="{Binding Culture}"
                               DecimalDigits="{Binding DecimalDigits}"
                               Increment="{Binding Increment}"
                               IsReadOnly="{Binding IsReadOnly}"
                               MaxValue="{Binding Max}"
                               MinValue="{Binding Min}"
                               NumberStyles="{Binding NumberStyles,
                                                      Mode=OneWay,
                                                      UpdateSourceTrigger=PropertyChanged}"
                               RegexPattern="{Binding RegexPattern}"
                               StringFormat="{Binding StringFormat,
                                                      Mode=TwoWay}"
                               Suffix="{Binding Suffix}"
                               Value="{Binding Value}" />
        </GroupBox>

        <ItemsControl Style="{StaticResource {x:Static propertyGrid:Keys.PropertyGridStyleKey}}">
            <ItemsControl Style="{StaticResource {x:Static propertyGrid:Keys.NestedPropertyGridStyleKey}}">
                <TextBlock Style="{StaticResource {x:Static propertyGrid:Keys.HeaderTextBlockStyleKey}}" Text="Status:" />

                <HeaderedContentControl Header="Text">
                    <TextBlock Text="{Binding Text, ElementName=InputBox}" />
                </HeaderedContentControl>

                <HeaderedContentControl Header="Value">
                    <TextBlock AutomationProperties.AutomationId="{x:Static local:AutomationIds.ValueBlock}" Text="{Binding Value, ElementName=InputBox}" />
                </HeaderedContentControl>

                <HeaderedContentControl Header="IsFocused">
                    <TextBlock Text="{Binding IsFocused, ElementName=InputBox}" />
                </HeaderedContentControl>

                <HeaderedContentControl Header="TextSource">
                    <TextBlock AutomationProperties.AutomationId="{x:Static local:AutomationIds.TextSourceBlock}" Text="{Binding Path=TextSource, ElementName=InputBox}" />
                </HeaderedContentControl>

                <HeaderedContentControl Header="Status">
                    <TextBlock AutomationProperties.AutomationId="{x:Static local:AutomationIds.StatusBlock}" Text="{Binding Path=Status, ElementName=InputBox}" />
                </HeaderedContentControl>
            </ItemsControl>

            <TextBlock Style="{StaticResource {x:Static propertyGrid:Keys.HeaderTextBlockStyleKey}}" Text="ViewModel:" />

            <HeaderedContentControl Header="CurrentValue">
                <TextBlock Text="{Binding Value}" />
            </HeaderedContentControl>

            <HeaderedContentControl Header="Edit Value">
                <TextBox AutomationProperties.AutomationId="{x:Static local:AutomationIds.VmValueBox}" Text="{Binding Value}" />
            </HeaderedContentControl>

            <TextBlock Style="{StaticResource {x:Static propertyGrid:Keys.HeaderTextBlockStyleKey}}" Text="Settings:" />

            <HeaderedContentControl Header="IsReadOnly">
                <CheckBox AutomationProperties.AutomationId="{x:Static local:AutomationIds.IsReadonlyBox}" IsChecked="{Binding IsReadOnly}" />
            </HeaderedContentControl>

            <HeaderedContentControl Header="CanValueBeNull">
                <CheckBox AutomationProperties.AutomationId="{x:Static local:AutomationIds.CanBeNullBox}" IsChecked="{Binding CanValueBeNull, ElementName=InputBox}" />
            </HeaderedContentControl>

            <HeaderedContentControl Header="Culture">
                <ComboBox AutomationProperties.AutomationId="{x:Static local:AutomationIds.CultureBox}"
                          IsSynchronizedWithCurrentItem="True"
                          ItemsSource="{Binding Cultures}"
                          SelectedItem="{Binding Culture}" />
            </HeaderedContentControl>

            <HeaderedContentControl Header="Decimals">
                <TextBox AutomationProperties.AutomationId="{x:Static local:AutomationIds.DigitsBox}" Text="{Binding DecimalDigits, TargetNullValue=''}" />
            </HeaderedContentControl>

            <HeaderedContentControl Header="StringFormat">
                <TextBox AutomationProperties.AutomationId="{x:Static local:AutomationIds.StringFormatBox}" Text="{Binding StringFormat, Mode=TwoWay}" />
            </HeaderedContentControl>

            <HeaderedContentControl Header="AllowLeadingWhite">
                <CheckBox AutomationProperties.AutomationId="{x:Static local:AutomationIds.AllowLeadingWhiteBox}" IsChecked="{Binding AllowLeadingWhite}" />
            </HeaderedContentControl>

            <HeaderedContentControl Header="AllowTrailingWhite">
                <CheckBox AutomationProperties.AutomationId="{x:Static local:AutomationIds.AllowTrailingWhiteBox}" IsChecked="{Binding AllowTrailingWhite}" />
            </HeaderedContentControl>

            <HeaderedContentControl Header="AllowLeadingSign">
                <CheckBox AutomationProperties.AutomationId="{x:Static local:AutomationIds.AllowLeadingSignBox}" IsChecked="{Binding AllowLeadingSign}" />
            </HeaderedContentControl>

            <HeaderedContentControl Header="AllowDecimalPoint">
                <CheckBox AutomationProperties.AutomationId="{x:Static local:AutomationIds.AllowDecimalPointBox}" IsChecked="{Binding AllowDecimalPoint}" />
            </HeaderedContentControl>

            <HeaderedContentControl Header="AllowThousands">
                <CheckBox AutomationProperties.AutomationId="{x:Static local:AutomationIds.AllowThousandsBox}" IsChecked="{Binding AllowThousands}" />
            </HeaderedContentControl>

            <HeaderedContentControl Header="AllowExponent">
                <CheckBox AutomationProperties.AutomationId="{x:Static local:AutomationIds.AllowExponentBox}" IsChecked="{Binding AllowExponent}" />
            </HeaderedContentControl>

            <HeaderedContentControl Header="Suffix">
                <TextBox AutomationProperties.AutomationId="{x:Static local:AutomationIds.SuffixBox}" Text="{Binding Suffix}" />
            </HeaderedContentControl>

            <HeaderedContentControl Header="Max">
                <TextBox AutomationProperties.AutomationId="{x:Static local:AutomationIds.MaxBox}" Text="{Binding Max, TargetNullValue=''}" />
            </HeaderedContentControl>

            <HeaderedContentControl Header="Min">
                <TextBox AutomationProperties.AutomationId="{x:Static local:AutomationIds.MinBox}" Text="{Binding Min, TargetNullValue=''}" />
            </HeaderedContentControl>

            <HeaderedContentControl Header="AllowSpinners">
                <CheckBox AutomationProperties.AutomationId="{x:Static local:AutomationIds.AllowSpinnersBox}" IsChecked="{Binding AllowSpinners}" />
            </HeaderedContentControl>

            <HeaderedContentControl Header="Increment">
                <TextBox AutomationProperties.AutomationId="{x:Static local:AutomationIds.IncrementBox}" Text="{Binding Increment, TargetNullValue=''}" />
            </HeaderedContentControl>

            <HeaderedContentControl Header="RegexPattern">
                <TextBox AutomationProperties.AutomationId="{x:Static local:AutomationIds.RegexPatternBox}" Text="{Binding RegexPattern}" />
            </HeaderedContentControl>
        </ItemsControl>
    </UniformGrid>
</UserControl>
