<Window x:Class="Gu.Wpf.NumericInput.Demo.UiTestWindows.DoubleBoxValidationWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:autoRowGrid="http://gu.se/AutoRowGrid"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:demo="clr-namespace:Gu.Wpf.NumericInput.Demo"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:numeric="http://gu.se/NumericInput"
        Title="DoubleBoxValidationWindow"
        SizeToContent="WidthAndHeight"
        mc:Ignorable="d">
    <Window.DataContext>
        <demo:DoubleBoxVm />
    </Window.DataContext>
    <StackPanel KeyboardNavigation.TabNavigation="Cycle">
        <numeric:DoubleBox x:Name="LostFocusValidateOnLostFocusBox"
                           AllowSpinners="{Binding AllowSpinners}"
                           CanValueBeNull="{Binding CanValueBeNull}"
                           Culture="{Binding Culture}"
                           DecimalDigits="{Binding DecimalDigits}"
                           Increment="{Binding Increment}"
                           IsReadOnly="{Binding IsReadOnly}"
                           MaxValue="{Binding Max}"
                           MinValue="{Binding Min}"
                           NumberStyles="{Binding NumberStyles}"
                           RegexPattern="{Binding RegexPattern}"
                           StringFormat="{Binding StringFormat}"
                           ValidationTrigger="LostFocus"
                           Value="{Binding Value}" />
        <TextBlock x:Name="LostFocusValidateOnLostFocusBoxError"
                   Foreground="Red"
                   Text="{Binding Path=(Validation.Errors)[0].ErrorContent,
                                  ElementName=LostFocusValidateOnLostFocusBox}" />

        <numeric:DoubleBox x:Name="LostFocusValidateOnPropertyChangedBox"
                           AllowSpinners="{Binding AllowSpinners}"
                           CanValueBeNull="{Binding CanValueBeNull}"
                           Culture="{Binding Culture}"
                           DecimalDigits="{Binding DecimalDigits}"
                           Increment="{Binding Increment}"
                           IsReadOnly="{Binding IsReadOnly}"
                           MaxValue="{Binding Max}"
                           MinValue="{Binding Min}"
                           NumberStyles="{Binding NumberStyles}"
                           RegexPattern="{Binding RegexPattern}"
                           StringFormat="{Binding StringFormat}"
                           ValidationTrigger="PropertyChanged"
                           Value="{Binding Value}" />

        <TextBlock x:Name="LostFocusValidateOnPropertyChangedBoxError"
                   Foreground="Red"
                   Text="{Binding Path=(Validation.Errors)[0].ErrorContent,
                                  ElementName=LostFocusValidateOnPropertyChangedBox}" />

        <numeric:DoubleBox x:Name="PropertyChangedValidateOnPropertyChangedBox"
                           AllowSpinners="{Binding AllowSpinners}"
                           CanValueBeNull="{Binding CanValueBeNull}"
                           Culture="{Binding Culture}"
                           DecimalDigits="{Binding DecimalDigits}"
                           Increment="{Binding Increment}"
                           IsReadOnly="{Binding IsReadOnly}"
                           MaxValue="{Binding Max}"
                           MinValue="{Binding Min}"
                           NumberStyles="{Binding NumberStyles}"
                           RegexPattern="{Binding RegexPattern}"
                           StringFormat="{Binding StringFormat}"
                           ValidationTrigger="PropertyChanged"
                           Value="{Binding Value,
                                           UpdateSourceTrigger=PropertyChanged}" />
        <TextBlock x:Name="PropertyChangedValidateOnPropertyChangedBoxError"
                   Foreground="Red"
                   Text="{Binding Path=(Validation.Errors)[0].ErrorContent,
                                  ElementName=PropertyChangedValidateOnPropertyChangedBox}" />
        <Button Content="lose focus" />
        <GroupBox Header="settings">
            <autoRowGrid:Grid ColumnDefinitions="Auto *">
                <autoRowGrid:Rows>
                    <autoRowGrid:Row>
                        <TextBlock Grid.Column="0"
                                   Grid.ColumnSpan="2"
                                   Style="{StaticResource HeaderTextBlockStyle}"
                                   Text="ViewModel:" />
                    </autoRowGrid:Row>

                    <autoRowGrid:Row>
                        <TextBlock Text="CurrentValue" />
                        <TextBlock Text="{Binding Value, ValidatesOnNotifyDataErrors=False}" />
                    </autoRowGrid:Row>

                    <autoRowGrid:Row>
                        <TextBlock Text="Edit Value:" />
                        <TextBox x:Name="ViewModelValue" Text="{Binding Value, ValidatesOnNotifyDataErrors=False, TargetNullValue=''}" />
                    </autoRowGrid:Row>
                </autoRowGrid:Rows>

                <autoRowGrid:Row>
                    <TextBlock Grid.Column="0"
                               Grid.ColumnSpan="2"
                               Style="{StaticResource HeaderTextBlockStyle}"
                               Text="Settings:" />
                </autoRowGrid:Row>

                <autoRowGrid:Row>
                    <TextBlock Text="IsReadOnly:" />
                    <CheckBox x:Name="IsReadOnly" IsChecked="{Binding IsReadOnly}" />
                </autoRowGrid:Row>

                <autoRowGrid:Row>
                    <TextBlock Text="HasINotifyDataErrorInfoError:" />
                    <CheckBox x:Name="HasErrors" IsChecked="{Binding HasErrors}" />
                </autoRowGrid:Row>

                <!--<autoRowGrid:Row>
                    <TextBlock Text="ValidationTrigger:" />
                    <ComboBox x:Name="ValidationTrigger" SelectedItem="{Binding ValidationTrigger}">
                        <numeric:ValidationTrigger>PropertyChanged</numeric:ValidationTrigger>
                        <numeric:ValidationTrigger>LostFocus</numeric:ValidationTrigger>
                        <numeric:ValidationTrigger>Explicit</numeric:ValidationTrigger>
                    </ComboBox>
                </autoRowGrid:Row>-->

                <autoRowGrid:Row>
                    <TextBlock Text="CanValueBeNull:" />
                    <CheckBox x:Name="CanValueBeNull" IsChecked="{Binding CanValueBeNull}" />
                </autoRowGrid:Row>

                <autoRowGrid:Row>
                    <TextBlock Text="Culture:" />
                    <ComboBox x:Name="Culture"
                              IsSynchronizedWithCurrentItem="True"
                              ItemsSource="{Binding Cultures}"
                              SelectedItem="{Binding Culture}" />
                </autoRowGrid:Row>

                <autoRowGrid:Row>
                    <TextBlock Text="Decimals:" />
                    <TextBox x:Name="Decimals" Text="{Binding DecimalDigits, TargetNullValue=''}" />
                </autoRowGrid:Row>

                <autoRowGrid:Row>
                    <TextBlock Text="StringFormat:" />
                    <TextBox x:Name="StringFormat" Text="{Binding StringFormat, TargetNullValue=''}" />
                </autoRowGrid:Row>
                <autoRowGrid:Rows>
                    <autoRowGrid:Row>
                        <TextBlock Style="{StaticResource HeaderTextBlockStyle}" Text="NumberStyles:" />
                    </autoRowGrid:Row>
                    <autoRowGrid:Row>
                        <TextBlock Text="AllowLeadingWhite:" />
                        <CheckBox x:Name="AllowLeadingWhite" IsChecked="{Binding AllowLeadingWhite}" />
                    </autoRowGrid:Row>

                    <autoRowGrid:Row>
                        <TextBlock Text="AllowTrailingWhite:" />
                        <CheckBox x:Name="AllowTrailingWhite" IsChecked="{Binding AllowTrailingWhite}" />
                    </autoRowGrid:Row>

                    <autoRowGrid:Row>
                        <TextBlock Text="AllowLeadingSign:" />
                        <CheckBox x:Name="AllowLeadingSign" IsChecked="{Binding AllowLeadingSign}" />
                    </autoRowGrid:Row>

                    <autoRowGrid:Row>
                        <TextBlock Text="AllowDecimalPoint:" />
                        <CheckBox x:Name="AllowDecimalPoint" IsChecked="{Binding AllowDecimalPoint}" />
                    </autoRowGrid:Row>

                    <autoRowGrid:Row>
                        <TextBlock Text="AllowThousands:" />
                        <CheckBox x:Name="AllowThousands" IsChecked="{Binding AllowThousands}" />
                    </autoRowGrid:Row>

                    <autoRowGrid:Row>
                        <TextBlock Text="AllowExponent:" />
                        <CheckBox x:Name="AllowExponent" IsChecked="{Binding AllowExponent}" />
                    </autoRowGrid:Row>
                </autoRowGrid:Rows>

                <autoRowGrid:Row>
                    <TextBlock Text="Max:" />
                    <TextBox x:Name="Max" Text="{Binding Max, TargetNullValue=''}" />
                </autoRowGrid:Row>

                <autoRowGrid:Row>
                    <TextBlock Text="Min:" />
                    <TextBox x:Name="Min" Text="{Binding Min, TargetNullValue=''}" />
                </autoRowGrid:Row>

                <autoRowGrid:Row>
                    <TextBlock Text="RegexPattern:" />
                    <TextBox x:Name="RegexPattern" Text="{Binding RegexPattern, TargetNullValue=''}" />
                </autoRowGrid:Row>

                <autoRowGrid:Rows>
                    <autoRowGrid:Row>
                        <TextBlock Text="AllowSpinners:" />
                        <CheckBox x:Name="AllowSpinners" IsChecked="{Binding AllowSpinners}" />
                    </autoRowGrid:Row>

                    <autoRowGrid:Row>
                        <TextBlock Text="Increment:" />
                        <TextBox x:Name="Increment" Text="{Binding Increment, TargetNullValue=''}" />
                    </autoRowGrid:Row>
                </autoRowGrid:Rows>
            </autoRowGrid:Grid>
        </GroupBox>
    </StackPanel>
</Window>
